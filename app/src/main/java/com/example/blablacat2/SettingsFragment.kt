package com.example.blablacat2

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.TextView
import android.widget.Toast
import androidx.core.net.toUri
import androidx.fragment.app.Fragment
import com.example.blablacat2.data.database.AppDatabase
import com.google.android.material.button.MaterialButton
import kotlinx.coroutines.*

class SettingsFragment : Fragment() {

    private lateinit var userAvatar: ImageView
    private lateinit var userName: TextView
    private lateinit var userEmail: TextView
    private lateinit var menuBookings: MaterialButton
    private lateinit var menuTheme: MaterialButton
    private lateinit var menuNotifications: MaterialButton
    private lateinit var menuConnectCar: MaterialButton
    private lateinit var menuHelp: MaterialButton
    private lateinit var menuInviteFriend: MaterialButton

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        return inflater.inflate(R.layout.fragment_settings, container, false)
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        userAvatar = view.findViewById(R.id.userAvatar)
        userName = view.findViewById(R.id.userName)
        userEmail = view.findViewById(R.id.userEmail)
        menuBookings = view.findViewById(R.id.menuBookings)
        menuTheme = view.findViewById(R.id.menuTheme)
        menuNotifications = view.findViewById(R.id.menuNotifications)
        menuConnectCar = view.findViewById(R.id.menuConnectCar)
        menuHelp = view.findViewById(R.id.menuHelp)
        menuInviteFriend = view.findViewById(R.id.menuInviteFriend)

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        loadUserProfile()

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏–π
        view.findViewById<View>(R.id.profileSection).setOnClickListener {
            parentFragmentManager.beginTransaction()
                .replace(R.id.fragmentContainer, ProfileFragment()) // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ø—Ä–æ—Ñ–∏–ª—è
                .addToBackStack(null) // –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
                .commit()
        }

        menuBookings.setOnClickListener {
            startActivity(Intent(activity, BookingsActivity::class.java))
        }
        menuTheme.setOnClickListener {
            startActivity(Intent(activity, ThemeActivity::class.java))
        }
        menuNotifications.setOnClickListener {
            startActivity(Intent(activity, NotificationsActivity::class.java))
        }
        menuConnectCar.setOnClickListener {
            startActivity(Intent(activity, MainActivity::class.java))
        }
        menuHelp.setOnClickListener {
            startActivity(Intent(activity, MainActivity::class.java))
        }
        menuInviteFriend.setOnClickListener {
            shareInvitation()
        }
    }

    private fun loadUserProfile() {
        CoroutineScope(Dispatchers.IO).launch {
            val userDao = AppDatabase.getDatabase(context ?: return@launch).userDao()
            val user = userDao.getCurrentUser()

            withContext(Dispatchers.Main) {
                if (user != null) {
                    userName.text = user.firstName
                    userEmail.text = user.email

                    user.profilePhotoUri?.let { uriString ->
                        val uri = Uri.parse(uriString)
                        try {
                            val resolver = context?.contentResolver ?: return@let

                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Ñ–∞–π–ª
                            context?.contentResolver?.openInputStream(uri)?.close()

                            val takeFlags = Intent.FLAG_GRANT_READ_URI_PERMISSION
                            resolver.takePersistableUriPermission(uri, takeFlags)
                            userAvatar.setImageURI(uri)
                        } catch (e: SecurityException) {
                            showToast("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ.")
                        } catch (e: Exception) {
                            showToast("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ.")
                        }
                    }
                }
            }
        }
    }
    private fun shareInvitation() {
        val inviteText = "üöÄ –ü—Ä–∏–≤–µ—Ç! –ü–æ–ø—Ä–æ–±—É–π —ç—Ç–æ –∫—Ä—É—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! –°–∫–∞—á–∞–π –µ–≥–æ –ø–æ —Å—Å—ã–ª–∫–µ: https://catcar.com/app"

        val shareIntent = Intent(Intent.ACTION_SEND).apply {
            type = "text/plain"
            putExtra(Intent.EXTRA_SUBJECT, "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ BlaBlaCat")
            putExtra(Intent.EXTRA_TEXT, inviteText)
        }

        startActivity(Intent.createChooser(shareIntent, "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–º"))
    }


    private fun showToast(message: String) {
        Toast.makeText(context, message, Toast.LENGTH_SHORT).show()
    }

}
